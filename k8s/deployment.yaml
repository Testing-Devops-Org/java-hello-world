apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-hello-world-deployment # Name of your deployment
  labels:
    app: java-hello-world # Label for easy identification
spec:
  replicas: 1 # Number of instances of your app to run
  selector:
    matchLabels:
      app: java-hello-world
  template:
    metadata:
      labels:
        app: java-hello-world
    spec:
      containers:
      - name: java-hello-world # Name of the container
        image: harshadm25/java-hello-world:latest 
        ports:
        - containerPort: 8080 # Matches the EXPOSE port in your Dockerfile
---
apiVersion: v1
kind: Service
metadata:
  name: java-hello-world-service # Name of your service
spec:
  selector:
    app: java-hello-world
  ports:
    - protocol: TCP
      port: 80 # The port clients will use to access the service (e.g., from a browser)
      targetPort: 8080 # The port your container is listening on (matching EXPOSE in Dockerfile)
  type: LoadBalancer # Creates an AWS Load Balancer for external access. For internal access, use ClusterIP.